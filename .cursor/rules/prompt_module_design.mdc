# Pinocchio 多智能体系统 Prompt 模块设计（重构版）

## 1. 概述

Prompt 模块负责 Pinocchio 多智能体系统中所有 agent 的结构化 prompt 构建、版本管理与模板演化。该模块支持高性能代码生成与调优场景下的多源输入融合（用户需求、知识片段、优化技术、DSL 语法等），并为 generator、debugger、evaluator 等 agent 提供专用 prompt 结构和多版本管理能力。

---

## 2. 目录结构

```
prompt/
├── __init__.py
├── models/
│   ├── __init__.py
│   └── prompt.py      # Prompt数据模型
├── templates/         # Prompt模板（多版本）
├── manager.py         # Prompt管理器
└── utils.py
```

---

## 3. 数据模型

```python
from pydantic import BaseModel, Field
from typing import Dict, List, Optional, Any
from datetime import datetime
import uuid

class PromptVersion(BaseModel):
    prompt_id: str = Field(default_factory=lambda: str(uuid.uuid4()))
    session_id: str
    agent_type: str  # generator/debugger/evaluator
    version: str
    template_name: str
    input_schema: Dict[str, Any]
    output_schema: Dict[str, Any]
    created_at: datetime = Field(default_factory=datetime.utcnow)
    parent_version: Optional[str] = None
    description: Optional[str] = ""

class StructuredPromptInput(BaseModel):
    user_requirement: str
    knowledge_fragments: Dict[str, Any]
    optimization_techniques: List[str]
    dsl_syntax: Optional[str] = None
    extra: Dict[str, Any] = Field(default_factory=dict)

class StructuredPromptOutput(BaseModel):
    code: str
    language: str
    kernel_type: str
    optimization_techniques: List[str]
    hyperparameters: Dict[str, Any]
    comments: List[str]
    metadata: Dict[str, Any] = Field(default_factory=dict)
```

---

## 4. 主要接口

- Prompt 模板多版本管理（创建/切换/回滚/对比）
- 结构化 prompt 输入输出的构建与校验
- agent 专用 prompt 结构适配（generator/debugger/evaluator）
- prompt 与 session/memory/knowledge 的引用与追踪

---

## 5. 设计要点

- 所有 prompt 输入输出均为结构化 JSON
- 支持多版本 prompt 模板与历史追踪
- 融合用户需求、知识片段、优化技术、DSL 语法等多源信息
- agent 适配：每类 agent 有专用 prompt 结构
- 与 session/memory/knowledge 解耦，仅存储引用
- 支持 prompt 版本回滚与对比

---

## 6. 典型流程

1. 用户提交任务，生成初始 prompt（融合用户需求、知识、优化技术、DSL 语法）
2. generator agent 使用结构化 prompt 生成代码
3. debugger/evaluator agent 继承并扩展 prompt，适配自身输入输出结构
4. 每次优化/调整均生成新 prompt 版本，支持历史追踪与回滚

---

## 7. 重构优势

- **结构化**：所有 prompt 输入输出均为结构化 JSON，便于自动化处理
- **多版本**：支持 prompt 模板多版本管理与历史追踪
- **高适配性**：为不同 agent 提供专用 prompt 结构
- **易集成**：与 session/memory/knowledge 解耦，便于模块协作

---

## 8. 测试策略

- prompt 输入输出结构校验
- 多版本 prompt 管理与回滚
- agent 适配的 prompt 构建与验证
- prompt 与 session/memory/knowledge 的引用一致性

---

该设计完全对齐 pinocchio_workflow.mdc，满足高性能代码生成与调优场景下多智能体协作、结构化 prompt 管理、优化技术与知识片段集成等核心需求。
